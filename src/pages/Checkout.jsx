import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { CheckCircle, CreditCard, Smartphone } from 'lucide-react';
import { getCart, clearCart, formatPrice } from '../utils/helpers';
import { ordersAPI } from '../api/services';
import { createPayment, generateOrderNumber } from '../utils/payment';
import { PAYMENT_CONFIG } from '../config/payment';

const Checkout = () => {
  const navigate = useNavigate();
  const [cart, setCart] = useState([]);
  const [formData, setFormData] = useState({
    firstName: '',
    lastName: '',
    email: '',
    phone: '',
    telegram: '',
    address: '',
    city: '',
    zipCode: '',
    comment: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [orderComplete, setOrderComplete] = useState(false);
  const [paymentMethod, setPaymentMethod] = useState('card'); // 'card', 'sbp', 'cash'

  useEffect(() => {
    const cartItems = getCart();
    if (cartItems.length === 0) {
      navigate('/cart');
    }
    setCart(cartItems);
  }, [navigate]);

  const handleInputChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSubmitting(true);

    try {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞
      const orderNumber = generateOrderNumber();

      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è API
      const orderData = {
        orderNumber: orderNumber,
        customer: {
          name: `${formData.firstName} ${formData.lastName}`,
          email: formData.email,
          phone: formData.phone,
          telegram: formData.telegram || ''
        },
        delivery: {
          address: formData.address,
          city: formData.city,
          zipcode: formData.zipCode
        },
        comment: formData.comment || '',
        items: cart.map(item => ({
          productId: item.id,
          quantity: item.quantity,
          price: item.price
        })),
        paymentMethod: paymentMethod,
        paymentId: null // –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
      };

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ —á–µ—Ä–µ–∑ API
      const createdOrder = await ordersAPI.create(orderData);
      console.log('–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ API:', createdOrder);

      // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –æ–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ - –ø—Ä–æ—Å—Ç–æ –∑–∞–≤–µ—Ä—à–∞–µ–º –∑–∞–∫–∞–∑
      if (paymentMethod === 'cash') {
        setTimeout(() => {
          setOrderComplete(true);
          clearCart();
          window.dispatchEvent(new Event('cartUpdated'));
          setIsSubmitting(false);

          // –ß–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          setTimeout(() => {
            navigate('/');
          }, 3000);
        }, 1500);
        return;
      }

      // –î–ª—è –æ–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç—ã —Å–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂ —á–µ—Ä–µ–∑ –Æ–ö–∞—Å—Å—É
      const paymentResult = await createPayment(
        { id: orderNumber, amount: total },
        total
      );

      if (paymentResult.success) {
        // –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º success
        if (PAYMENT_CONFIG.mode === 'test') {
          alert(`üîÑ –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú\n\n–ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω –≤ –Æ–ö–∞—Å—Å–µ:\n–ó–∞–∫–∞–∑: ${orderNumber}\n–°—É–º–º–∞: ${formatPrice(total)}\nPayment ID: ${paymentResult.payment_id}\n\n–í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Ñ–æ—Ä–º—É –Æ–ö–∞—Å—Å—ã`);

          // –ò–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ–ø–ª–∞—Ç—É
          setTimeout(() => {
            navigate(`/payment/success?orderId=${orderNumber}&paymentId=${paymentResult.payment_id}`);
            clearCart();
            window.dispatchEvent(new Event('cartUpdated'));
          }, 1500);
        } else {
          // –í production —Ä–µ–∂–∏–º–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Ñ–æ—Ä–º—É –Æ–ö–∞—Å—Å—ã
          // URL –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤ –ø–æ–ª–µ confirmation_url
          window.location.href = paymentResult.confirmation_url;
        }
      } else {
        // –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
        alert(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞: ${paymentResult.error}`);
        setIsSubmitting(false);
      }

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
      setIsSubmitting(false);
    }
  };

  const subtotal = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);
  const shipping = subtotal >= 5000 ? 0 : 300;
  const total = subtotal + shipping;

  if (orderComplete) {
    return (
      <div className="min-h-screen pt-24 pb-16 flex items-center justify-center">
        <div className="container mx-auto px-4">
          <div className="card-dark text-center max-w-2xl mx-auto">
            <CheckCircle className="w-24 h-24 mx-auto mb-6 text-green-500" />
            <h2 className="text-3xl font-bold text-light-100 mb-4">
              –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!
            </h2>
            <p className="text-light-300 mb-6">
              –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞ –≤–∞—à—É –ø–æ—á—Ç—É.
            </p>
            <p className="text-light-400 text-sm">
              –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...
            </p>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen pt-24 pb-16">
      <div className="container mx-auto px-4">
        <h1 className="text-4xl font-bold mb-8 text-light-100">–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h1>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Checkout Form */}
          <div className="lg:col-span-2">
            <form onSubmit={handleSubmit} className="card-dark">
              <h2 className="text-2xl font-bold mb-6 text-light-100">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
                <div>
                  <label className="block text-light-200 text-sm font-medium mb-2">
                    –ò–º—è *
                  </label>
                  <input
                    type="text"
                    name="firstName"
                    value={formData.firstName}
                    onChange={handleInputChange}
                    required
                    className="input"
                  />
                </div>
                <div>
                  <label className="block text-light-200 text-sm font-medium mb-2">
                    –§–∞–º–∏–ª–∏—è *
                  </label>
                  <input
                    type="text"
                    name="lastName"
                    value={formData.lastName}
                    onChange={handleInputChange}
                    required
                    className="input"
                  />
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
                <div>
                  <label className="block text-light-200 text-sm font-medium mb-2">
                    Email *
                  </label>
                  <input
                    type="email"
                    name="email"
                    value={formData.email}
                    onChange={handleInputChange}
                    required
                    className="input"
                  />
                </div>
                <div>
                  <label className="block text-light-200 text-sm font-medium mb-2">
                    –¢–µ–ª–µ—Ñ–æ–Ω *
                  </label>
                  <input
                    type="tel"
                    name="phone"
                    value={formData.phone}
                    onChange={handleInputChange}
                    required
                    className="input"
                    placeholder="+7 (___) ___-__-__"
                  />
                </div>
              </div>

              <div className="mb-6">
                <label className="block text-light-200 text-sm font-medium mb-2">
                  Telegram
                </label>
                <input
                  type="text"
                  name="telegram"
                  value={formData.telegram}
                  onChange={handleInputChange}
                  className="input"
                  placeholder="@username"
                />
                <p className="text-sm text-light-400 mt-1">
                  –£–∫–∞–∂–∏—Ç–µ –≤–∞—à Telegram –¥–ª—è —Å–≤—è–∑–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)
                </p>
              </div>

              <h2 className="text-2xl font-bold mb-6 text-light-100 mt-8">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</h2>

              <div className="mb-6">
                <label className="block text-light-200 text-sm font-medium mb-2">
                  –ê–¥—Ä–µ—Å *
                </label>
                <input
                  type="text"
                  name="address"
                  value={formData.address}
                  onChange={handleInputChange}
                  required
                  className="input"
                  placeholder="–£–ª–∏—Ü–∞, –¥–æ–º, –∫–≤–∞—Ä—Ç–∏—Ä–∞"
                />
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
                <div>
                  <label className="block text-light-200 text-sm font-medium mb-2">
                    –ì–æ—Ä–æ–¥ *
                  </label>
                  <input
                    type="text"
                    name="city"
                    value={formData.city}
                    onChange={handleInputChange}
                    required
                    className="input"
                  />
                </div>
                <div>
                  <label className="block text-light-200 text-sm font-medium mb-2">
                    –ò–Ω–¥–µ–∫—Å *
                  </label>
                  <input
                    type="text"
                    name="zipCode"
                    value={formData.zipCode}
                    onChange={handleInputChange}
                    required
                    className="input"
                    placeholder="000000"
                  />
                </div>
              </div>

              <div className="mb-6">
                <label className="block text-light-200 text-sm font-medium mb-2">
                  –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∑–∞–∫–∞–∑—É
                </label>
                <textarea
                  name="comment"
                  value={formData.comment}
                  onChange={handleInputChange}
                  className="input"
                  rows="4"
                  placeholder="–û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏..."
                ></textarea>
              </div>

              {/* Payment Method Selection */}
              <div className="mb-8">
                <h2 className="text-2xl font-bold mb-4 text-light-100">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</h2>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                  {/* –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ */}
                  <button
                    type="button"
                    onClick={() => setPaymentMethod('card')}
                    className={`p-4 rounded-xl border-2 transition-all ${
                      paymentMethod === 'card'
                        ? 'border-peach-400 bg-peach-400/10'
                        : 'border-glass bg-glass hover:border-peach-400/50'
                    }`}
                  >
                    <CreditCard className={`w-8 h-8 mx-auto mb-3 ${
                      paymentMethod === 'card' ? 'text-peach-400' : 'text-light-400'
                    }`} />
                    <p className="font-semibold text-light-100 mb-1">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</p>
                    <p className="text-xs text-light-400">–û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞</p>
                  </button>

                  {/* –°–ë–ü */}
                  <button
                    type="button"
                    onClick={() => setPaymentMethod('sbp')}
                    className={`p-4 rounded-xl border-2 transition-all ${
                      paymentMethod === 'sbp'
                        ? 'border-peach-400 bg-peach-400/10'
                        : 'border-glass bg-glass hover:border-peach-400/50'
                    }`}
                  >
                    <Smartphone className={`w-8 h-8 mx-auto mb-3 ${
                      paymentMethod === 'sbp' ? 'text-peach-400' : 'text-light-400'
                    }`} />
                    <p className="font-semibold text-light-100 mb-1">–°–ë–ü</p>
                    <p className="text-xs text-light-400">–ë—ã—Å—Ç—Ä—ã–π –ø–ª–∞—Ç–µ–∂</p>
                  </button>

                  {/* –ù–∞–ª–∏—á–Ω—ã–º–∏ */}
                  <button
                    type="button"
                    onClick={() => setPaymentMethod('cash')}
                    className={`p-4 rounded-xl border-2 transition-all ${
                      paymentMethod === 'cash'
                        ? 'border-peach-400 bg-peach-400/10'
                        : 'border-glass bg-glass hover:border-peach-400/50'
                    }`}
                  >
                    <div className={`text-3xl mx-auto mb-3 ${
                      paymentMethod === 'cash' ? 'text-peach-400' : 'text-light-400'
                    }`}>üíµ</div>
                    <p className="font-semibold text-light-100 mb-1">–ü—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</p>
                    <p className="text-xs text-light-400">–ù–∞–ª–∏—á–Ω—ã–º–∏/–∫–∞—Ä—Ç–æ–π</p>
                  </button>
                </div>

                {/* Payment Info */}
                {paymentMethod !== 'cash' && (
                  <div className="mt-4 p-4 bg-peach-400/10 border border-peach-400/30 rounded-xl">
                    <p className="text-sm text-light-200">
                      üí≥ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω—É—é —Ñ–æ—Ä–º—É –Æ–ö–∞—Å—Å—ã (–Ø–Ω–¥–µ–∫—Å)
                    </p>
                    <p className="text-xs text-light-400 mt-1">
                      –í–∞—à–∏ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–∞–¥–µ–∂–Ω–æ –∑–∞—â–∏—â–µ–Ω—ã —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º PCI DSS
                    </p>
                  </div>
                )}

                {paymentMethod === 'cash' && (
                  <div className="mt-4 p-4 bg-glass border border-glass rounded-xl">
                    <p className="text-sm text-light-200">
                      üíµ –û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏ –∏–ª–∏ –∫–∞—Ä—Ç–æ–π –∫—É—Ä—å–µ—Ä—É –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏
                    </p>
                  </div>
                )}
              </div>

              <button
                type="submit"
                disabled={isSubmitting}
                className="btn btn-primary w-full"
              >
                {isSubmitting ? (
                  <>
                    <span className="loading"></span>
                    <span>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ...</span>
                  </>
                ) : paymentMethod === 'cash' ? (
                  '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑'
                ) : (
                  '–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ'
                )}
              </button>
            </form>
          </div>

          {/* Order Summary */}
          <div className="lg:col-span-1">
            <div className="card-dark sticky top-24">
              <h3 className="text-xl font-bold mb-6 text-light-100">–í–∞—à –∑–∞–∫–∞–∑</h3>
              
              <div className="space-y-4 mb-6">
                {cart.map((item) => (
                  <div key={item.id} className="flex gap-3">
                    <img
                      src={item.image}
                      alt={item.name}
                      className="w-16 h-20 object-cover rounded-lg"
                    />
                    <div className="flex-1">
                      <h4 className="font-semibold text-light-100 text-sm">
                        {item.name}
                      </h4>
                      <p className="text-xs text-light-400">
                        {item.quantity} √ó {formatPrice(item.price)}
                      </p>
                    </div>
                  </div>
                ))}
              </div>

              <div className="space-y-3 mb-6 pt-4">
                <div className="flex justify-between text-light-300">
                  <span>–¢–æ–≤–∞—Ä—ã ({cart.reduce((sum, item) => sum + item.quantity, 0)})</span>
                  <span className="font-semibold text-light-100">{formatPrice(subtotal)}</span>
                </div>
                <div className="flex justify-between text-light-300">
                  <span>–î–æ—Å—Ç–∞–≤–∫–∞</span>
                  <span className="font-semibold text-light-100">
                    {shipping === 0 ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : formatPrice(shipping)}
                  </span>
                </div>
              </div>

              <div className="flex justify-between text-xl font-bold mb-4 pt-4 border-t border-glass/30 text-light-100">
                <span>–ò—Ç–æ–≥–æ</span>
                <span className="text-peach-400">{formatPrice(total)}</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Checkout;
